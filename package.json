{
  "name": "@go-corp/utils",
  "type": "module",
  "version": "1.3.1",
  "description": "A collection of Cloudflare Workers-compatible utility functions for Go Corp projects. Node.js utilities available via @go-corp/utils/node.",
  "author": "Go Corp <dev@golive.me>",
  "license": "MIT",
  "homepage": "https://github.com/go-corp/utils#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/go-corp/utils.git"
  },
  "bugs": {
    "url": "https://github.com/go-corp/utils/issues"
  },
  "keywords": [
    "utils",
    "utilities",
    "typescript",
    "javascript",
    "cloudflare-workers",
    "edge-computing",
    "tree-shaking",
    "esm",
    "cjs"
  ],
  "sideEffects": false,
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.js",
      "require": "./dist/index.cjs"
    },
    "./array": {
      "types": "./dist/array/index.d.ts",
      "import": "./dist/array/index.js",
      "require": "./dist/array/index.cjs"
    },
    "./async": {
      "types": "./dist/async/index.d.ts",
      "import": "./dist/async/index.js",
      "require": "./dist/async/index.cjs"
    },
    "./date": {
      "types": "./dist/date/index.d.ts",
      "import": "./dist/date/index.js",
      "require": "./dist/date/index.cjs"
    },
    "./string": {
      "types": "./dist/string/index.d.ts",
      "import": "./dist/string/index.js",
      "require": "./dist/string/index.cjs"
    },
    "./object": {
      "types": "./dist/object/index.d.ts",
      "import": "./dist/object/index.js",
      "require": "./dist/object/index.cjs"
    },
    "./math": {
      "types": "./dist/math/index.d.ts",
      "import": "./dist/math/index.js",
      "require": "./dist/math/index.cjs"
    },
    "./validation": {
      "types": "./dist/validation/index.d.ts",
      "import": "./dist/validation/index.js",
      "require": "./dist/validation/index.cjs"
    },
    "./web": {
      "types": "./dist/web/index.d.ts",
      "import": "./dist/web/index.js",
      "require": "./dist/web/index.cjs"
    },
    "./node": {
      "types": "./dist/node/index.d.ts",
      "import": "./dist/node/index.js",
      "require": "./dist/node/index.cjs"
    },
    "./node/git-utils": {
      "types": "./dist/node/git-utils.d.ts",
      "import": "./dist/node/git-utils.js",
      "require": "./dist/node/git-utils.cjs"
    },
    "./node/prompt-utils": {
      "types": "./dist/node/prompt-utils.d.ts",
      "import": "./dist/node/prompt-utils.js",
      "require": "./dist/node/prompt-utils.cjs"
    },
    "./types": {
      "types": "./dist/types/index.d.ts",
      "import": "./dist/types/index.js",
      "require": "./dist/types/index.cjs"
    },
    "./crypto": {
      "types": "./dist/crypto/index.d.ts",
      "import": "./dist/crypto/index.js",
      "require": "./dist/crypto/index.cjs"
    },
    "./database": {
      "types": "./dist/database/index.d.ts",
      "import": "./dist/database/index.js",
      "require": "./dist/database/index.cjs"
    },
    "./debug": {
      "types": "./dist/debug/index.d.ts",
      "import": "./dist/debug/index.js",
      "require": "./dist/debug/index.cjs"
    },
    "./http": {
      "types": "./dist/http/index.d.ts",
      "import": "./dist/http/index.js",
      "require": "./dist/http/index.cjs"
    },
    "./package.json": "./package.json"
  },
  "main": "./dist/index.cjs",
  "module": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "bin": {
    "go-utils-mcp": "./mcp-server/server.js"
  },
  "files": [
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
    "SECURITY.md",
    "PERFORMANCE.md",
    "dist",
    "mcp-server"
  ],
  "scripts": {
    "build": "NODE_ENV=production tsup && bun run build:mcp",
    "build:dev": "NODE_ENV=development tsup && bun run build:mcp:dev",
    "build:mcp": "bun build mcp-server/server.ts --outdir mcp-server --outfile server.js --target node --minify",
    "build:mcp:dev": "bun build mcp-server/server.ts --outdir mcp-server --outfile server.js --target node",
    "dev": "NODE_ENV=development tsup --watch",
    "size-check": "bun run build && bundlesize",
    "analyze": "bun run build && bun run analyze:report",
    "analyze:report": "node scripts/analyze-bundle.cjs",
    "perf": "bun run build && bun run test:ci && bun run analyze",
    "deps:check": "npx depcheck --ignores='@types/bun,webpack-bundle-analyzer'",
    "ci:local": "bun run type-check && bun run lint && bun run test:ci && bun run build && bun run size-check",
    "ci:optimized": "bun run type-check && bun run test:ci && bun run build && bun run size-check && bun run analyze",
    "mcp:start": "node mcp-server/server.js",
    "test": "vitest",
    "test:ci": "vitest run",
    "test:watch": "vitest --watch",
    "type-check": "tsc --noEmit",
    "lint": "eslint src --ext .ts",
    "lint:fix": "eslint src --ext .ts --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "clean": "rm -rf dist",
    "prepare": "NODE_ENV=production bun run build",
    "prepublishOnly": "bun run type-check && bun run test:ci && bun run build",
    "publish:public": "bun run build && npm publish --access public",
    "changeset": "changeset",
    "changeset:version": "changeset version",
    "changeset:publish": "changeset publish",
    "changeset:status": "changeset status",
    "release": "node scripts/release.js",
    "release:help": "node scripts/release.js --help",
    "workflow": "bun scripts/workflow.ts",
    "demo": "bun scripts/demo.ts",
    "finish-branch": "bun -e 'import { finishBranch } from \"@go-corp/utils/node\"; await finishBranch()'"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.20.0",
    "nanoid": "^5.1.6"
  },
  "devDependencies": {
    "@antfu/eslint-config": "^6.0.0",
    "@changesets/cli": "^2.29.7",
    "@types/bun": "^1.3.0",
    "bundlesize2": "^0.0.31",
    "eslint": "^9.0.0",
    "prettier": "^3.3.0",
    "tsup": "^8.3.0",
    "typescript": "^5.9.0",
    "vitest": "^2.1.0",
    "webpack-bundle-analyzer": "^4.10.2"
  },
  "bundlesize": [
    {
      "path": "./dist/index.js",
      "maxSize": "25kb",
      "compression": "gzip"
    },
    {
      "path": "./dist/*/index.js",
      "maxSize": "5kb",
      "compression": "gzip"
    }
  ]
}
