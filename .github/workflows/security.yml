name: Security Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'typescript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # Override built-in queries with custom ones
        queries: +security-extended,security-and-quality

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install --frozen-lockfile

    - name: Build project
      run: bun run build

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  dependency-audit:
    name: Dependency Security Audit
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install --frozen-lockfile

    - name: Run security audit
      run: |
        # Check for known vulnerabilities
        bunx audit-ci --config .auditci.json || echo "Audit completed with warnings"
        
        # Additional npm audit for broader coverage
        npm audit --audit-level high || echo "NPM audit completed"

    - name: Check for outdated dependencies
      run: |
        echo "Checking for outdated dependencies..."
        bun outdated || echo "Outdated check completed"

  license-compliance:
    name: License Compliance Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install --frozen-lockfile

    - name: Check licenses
      run: |
        echo "Checking license compliance..."
        bunx license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;0BSD' --excludePrivatePackages || echo "License check completed"

  supply-chain-security:
    name: Supply Chain Security
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Verify package integrity
      run: |
        echo "Verifying package integrity..."
        # Check for suspicious packages or typosquatting
        bunx @sigstore/cli verify npm @modelcontextprotocol/sdk || echo "Signature verification completed"
        bunx @sigstore/cli verify npm nanoid || echo "Signature verification completed"

    - name: SARIF Upload
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: results.sarif
      continue-on-error: true